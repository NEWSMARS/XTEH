/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2020-01-13 13:06:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\t\r\n");
      out.write("<head>\r\n");
      out.write("<title>Login</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" charset=\"UTF-8\">\r\n");
      out.write("<script type=\"application/x-javascript\"> addEventListener(\"load\", function() { setTimeout(hideURLbar, 0); }, false); function hideURLbar(){ window.scrollTo(0,1); } </script>\r\n");
      out.write("<meta name=\"keywords\" content=\"Flat Dark Web Login Form Responsive Templates, Iphone Widget Template, Smartphone login forms,Login form, Widget Template, Responsive Templates, a Ipad 404 Templates, Flat Responsive Templates\" />\r\n");
      out.write("<link href=\"css/style.css\" rel='stylesheet' type='text/css' />\r\n");
      out.write("<!--webfonts-->\r\n");
      out.write("<link href='http://fonts.useso.com/css?family=PT+Sans:400,700,400italic,700italic|Oswald:400,300,700' rel='stylesheet' type='text/css'>\r\n");
      out.write("<link href='http://fonts.useso.com/css?family=Exo+2' rel='stylesheet' type='text/css'>\r\n");
      out.write("<!--//webfonts-->\r\n");
      out.write("<script src=\"http://ajax.useso.com/ajax/libs/jquery/1.11.0/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\tvar loginfo = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginfo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\tif (loginfo != \"\") {\r\n");
      out.write("\t\t\t$.messager.alert('登录失败', loginfo, 'error');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write(" <!--SIGN UP-->\r\n");
      out.write(" <h1>欢迎使用！</h1>\r\n");
      out.write("<div class=\"login-form\">\r\n");
      out.write("\t<div class=\"close\"> </div>\r\n");
      out.write("\t\t<div class=\"head-info\">\r\n");
      out.write("\t\t\t<label class=\"lbl-1\"> </label>\r\n");
      out.write("\t\t\t<label class=\"lbl-2\"> </label>\r\n");
      out.write("\t\t\t<label class=\"lbl-3\"> </label>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"clear\"> </div>\r\n");
      out.write("\t<div class=\"avtar\">\r\n");
      out.write("\t\t<img src=\"images/avtar.png\" />\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\t\t<form method=\"post\" action=\"loginservlet\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t\t <input type=\"text\" class=\"text\" name=\"userid\"  onfocus=\"this.value = '';\" onblur=\"if (this.value == '') {this.value = 'number';}\" >\r\n");
      out.write("\t\t\t\t\t\t<div class=\"key\">\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" name=\"password\"  onfocus=\"this.value = '';\" onblur=\"if (this.value == '') {this.value = 'password';}\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"signin\">\r\n");
      out.write("\t\t<input  id=\"input_submit\" type=\"submit\"  value=\"登录\" >\r\n");
      out.write("\t</div></form>\r\n");
      out.write("\t<div class=\"signin\">\r\n");
      out.write("\t\t<a href=\"register.jsp\"><input type=\"button\"  value=\"注册\" ></a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t<div class=\"tips\" id=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${is_true}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">用户名/密码错误</div>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tfunction tip_none(){\r\n");
      out.write("\t\t\t$(\".tips\").text(\"用户名/密码不能为空\");\r\n");
      out.write("\t\t\t$(\".tips\").css(\"display\",\"inline-block\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tsetTimeout(function(){\r\n");
      out.write("\t\t\t\t$(\".tips\").css(\"display\",\"none\");\r\n");
      out.write("\t\t\t\t$(\".tips\").text(\"用户名/密码错误\");\r\n");
      out.write("\t\t\t},3000);\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\tfunction tip_error(){\r\n");
      out.write("\t\t\t$(\".tips\").css(\"display\",\"inline-block\");\r\n");
      out.write("\t\t\tsetTimeout(function(){\r\n");
      out.write("\t\t\t\t$(\".tips\").css(\"display\",\"none\");\r\n");
      out.write("\t\t\t},3000);\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t$(document).ready(function(){\r\n");
      out.write("\t\t\t$(\".submit\").click(function(){\r\n");
      out.write("\t\t\t\t if ($(\".text\").val()&&$(\".password\").val()) return ture;\r\n");
      out.write("\t\t\t\t else {\r\n");
      out.write("\t\t\t\t\ttip_none();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t };\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif($(\"#0\").length){\r\n");
      out.write("\t\t\ttip_error();\r\n");
      out.write("\t\t} \r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
